from rest_framework import serializers
from django.contrib.auth.password_validation import validate_password
from .models import (
    Users,
    Activities,
    Allergens,
    UserActivities,
    UserAllergens,
    PlannedActivities,
)


class UsersSerializer(serializers.ModelSerializer):
    """
    Serializer for the Users model:
    - id : Primary key, automatically generated by Django.
    - username : Username of the user.
    - email : email address with validation type by django.
    - address : Address of the user.
    Attention:
    - password : password is automatically hashed and not exposed in serializer

    """
    password = serializers.CharField(
        write_only=True, validators=[validate_password])

    class Meta:
        model = Users
        fields = ["id", "username", "email", "address"]

    def create(self, validated_data):
        user = Users.objects.create_user(**validated_data)
        return user

    def update(self, instance, validated_data):
        if 'password' in validated_data:
            password = validated_data.pop('password')
            instance.set_password(password)
        return super().update(instance, validated_data)


class ActivitiesSerializer(serializers.ModelSerializer):
    """
    Serializer for the Activities model:
    - id : Primary key, automatically generated by Django.
    - name : Name of the activity.
    - description : Description of the activity.
    """

    class Meta:
        model = Activities
        fields = ["id", "name", "description"]


class AllergensSerializer(serializers.ModelSerializer):
    """
    Serializer for the Allergens model:
    - id : Primary key, automatically generated by Django.
    - name : Name of the allergen.
    - description : Description of the allergen.
    """

    class Meta:
        model = Allergens
        fields = ["id", "name", "description"]


class UserActivitiesSerializer(serializers.ModelSerializer):
    """
    Serializer for the UserActivities model:
    - id : Primary key, automatically generated by Django.
    - user_id : User's id.
    - activity_id : Activity's id.
    """

    class Meta:
        model = UserActivities
        fields = ["id", "user_id", "activity_id"]


class UserAllergensSerializer(serializers.ModelSerializer):
    """
    Serializer for the UserAllergens model:
    - id : Primary key, automatically generated by Django.
    - user_id : User's id.
    - allergen_id : Allergen's id.
    """

    class Meta:
        model = UserAllergens
        fields = ["id", "user_id", "allergen_id"]


class PlannedActivitiesSerializer(serializers.ModelSerializer):
    """
    Serializer for the PlannedActivities model:
    - id : Primary key, automatically generated by Django.
    - user_id : User's id.
    - activity_id : Activity's id.
    - location : Location of the activity.
    - start_date : Start date of the activity.
    - end_date : End date of the activity.
    """

    class Meta:
        model = PlannedActivities
        fields = ["id", "user_id", "activity_id",
                  "location", "start_date", "end_date"]
